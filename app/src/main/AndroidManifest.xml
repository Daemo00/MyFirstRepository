<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.daemo.myfirstapp">

    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_SYNC_STATS" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.NFC" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.REAL_GET_TASKS" />


    <uses-feature
        android:name="android.hardware.NFC"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false" />
    <!-- Tell the system this app requires OpenGL ES 3.0. -->
    <uses-feature
        android:glEsVersion="0x00030000"
        android:required="true" />

    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" />

    <application
        android:name=".MyFirstApplication"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:resizeableActivity="true"
        android:supportsRtl="true"
        android:theme="@style/AppTheme.NoActionBar">
        <layout
            android:defaultHeight="500dp"
            android:defaultWidth="600dp"
            android:gravity="top|end"
            android:minHeight="450dp"
            android:minWidth="300dp" />

        <activity
            android:name=".MainActivity"
            android:theme="@style/SplashTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name=".lifecycle.ActivityA"
            android:launchMode="singleTask"
            android:parentActivityName=".MainActivity" />
        <activity android:name=".lifecycle.ActivityB" />
        <activity android:name=".lifecycle.ActivityC" />
        <activity
            android:name=".lifecycle.DialogActivity"
            android:theme="@android:style/Theme.Dialog" />
        <activity
            android:name=".fragments.FragmentsActivity"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".savingData.SavingActivity"
            android:label="@string/title_activity_saving_data"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".location.LocationActivity"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".interaction.Interacting"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".sharingSimpleData.FileSelectClientActivity"
            android:parentActivityName=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="image/*" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="text/plain" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE" />

                <category android:name="android.intent.category.DEFAULT" />

                <data android:mimeType="image/*" />
            </intent-filter>
        </activity>
        <activity
            android:name=".sharingSimpleData.FileSelectServerActivity"
            android:label="File Selector Server">
            <intent-filter>
                <action android:name="android.intent.action.PICK" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.OPENABLE" />

                <data android:mimeType="text/plain" />
                <data android:mimeType="image/*" />
            </intent-filter>
        </activity>
        <activity
            android:name=".multimedia.MultimediaActivity"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".graphics.GraphicsActivity"
            android:label="@string/title_activity_main2"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".graphics.displayingbitmaps.ImageDetailActivity"
            android:parentActivityName=".graphics.GraphicsActivity" />

        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="com.daemo.myfirstapp.fileprovider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/filepaths" />
        </provider>
        <provider
            android:name=".connectivity.syncAdapter.provider.FeedProvider"
            android:authorities="com.daemo.myfirstapp.connectivity.syncAdapter"
            android:exported="false" />

        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>
        <receiver android:name=".multimedia.audio.MusicIntentReceiver">
            <intent-filter>
                <action android:name="android.media.AUDIO_BECOMING_NOISY" />
            </intent-filter>
        </receiver>

        <activity android:name=".settings.SettingsActivity" />

        <service
            android:name=".multimedia.audio.MyService"
            android:enabled="true"
            android:exported="true" />
        <!--
             This service implements our SyncAdapter. It needs to be exported, so that the system
                sync framework can access it.
        -->
        <service
            android:name=".connectivity.syncAdapter.SyncService"
            android:exported="true">

            <!-- android:permission="android.permission.BIND_QUICK_SETTINGS_TILE" -->


            <!--
            This intent filter is required.
            It allows the system to launch our sync service as needed.
            -->
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
                <!-- <action android:name="android.service.quicksettings.action.QS_TILE" /> -->
            </intent-filter>
            <!-- This points to a required XML file which describes our SyncAdapter. -->
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter" />
        </service>

        <!--
        This implements the account we'll use as an attachment point for our SyncAdapter. Since
        our SyncAdapter doesn't need to authenticate the current user (it just fetches a public RSS
        feed), this account's implementation is largely empty.

        It's also possible to attach a SyncAdapter to an existing account provided by another
        package. In that case, this element could be omitted here.
        -->
        <service android:name=".connectivity.syncAdapter.accounts.GenericAccountService">

            <!-- Required filter used by the system to launch our account service. -->
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <!-- This points to an XML file which describes our account service. -->
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator" />
        </service>
        <service
            android:name=".location.aware.FetchAddressIntentService"
            android:exported="false" />
        <service android:name=".location.aware.GeofenceTransitionsIntentService" />

        <activity
            android:name=".connectivity.ConnectivityActivity"
            android:parentActivityName=".MainActivity" />

        <receiver
            android:name=".connectivity.p2p.WiFiDirectBroadcastReceiver"
            android:enabled="true"
            android:exported="true" />
        <!--
             The API key for Google Maps-based APIs is defined as a string resource.
             (See the file "res/values/google_maps_api.xml").
             Note that the API key is linked to the encryption key used to sign the APK.
             You need a different API key for each encryption key, including the release key that is used to
             sign the APK for publishing.
             You can define the keys for the debug and release targets in src/debug/ and src/release/. 
        -->
        <meta-data
            android:name="com.google.android.geo.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".location.MapsActivity"
            android:label="@string/title_activity_maps"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".userinfo.UserInfoActivity"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".notification.NotificationActivity"
            android:launchMode="singleInstance"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".notification.NotificationSpecialActivity"
            android:excludeFromRecents="true"
            android:label="@string/title_activity_notification_special"
            android:launchMode="singleTask"
            android:taskAffinity=""
            android:theme="@android:style/Theme.Material.Dialog"
            tools:ignore="NewApi" />

        <receiver
            android:name=".notification.MyNotificationReceiver"
            android:enabled="true"
            android:exported="true" />

        <activity
            android:name=".shortcuts.ShortcutActivity"
            android:parentActivityName=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.shortcuts"
                android:resource="@xml/shortcuts" />
        </activity>
        <activity
            android:name=".drag_drop.DragDropActivity"
            android:parentActivityName=".MainActivity" />
        <activity
            android:name=".monitor.MonitorActivity"
            android:parentActivityName=".MainActivity" />

        <service
            android:name=".monitor.MonitorService"
            android:enabled="true"
            android:exported="true" />
    </application>

</manifest>